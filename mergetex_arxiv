#!/bin/bash

# Check for the correct number of arguments
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 file1.tex file2.tex"
    exit 1
fi

mkdir ../arxiv_version/
cp -r ./* ../arxiv_version/
mv ../arxiv_version ./
cd arxiv_version/

# Get the input file names from command-line arguments
file1="$1"
file2="$2"

# Check if the input files exist
if [ ! -f "$file1" ]; then
    echo "Error: Input file $file1 not found."
    exit 1
fi

if [ ! -f "$file2" ]; then
    echo "Error: Input file $file2 not found."
    exit 1
fi

file1_noending=$(echo "$file1" | sed 's/\.tex$//')
file2_noending=$(echo "$file2" | sed 's/\.tex$//')

pdflatex -draftmode -interaction=batchmode $file1
bibtex $file1_noending
pdflatex -draftmode -interaction=batchmode $file1
bibtex $file1_noending
pdflatex -draftmode -interaction=batchmode $file1
pdflatex -interaction=batchmode $file1
pdflatex $file1

pdflatex -draftmode -interaction=batchmode $file2
bibtex $file2_noending
pdflatex -draftmode -interaction=batchmode $file2
bibtex $file2_noending
pdflatex -draftmode -interaction=batchmode $file2
pdflatex -interaction=batchmode $file2
pdflatex $file2

# Create copies of the supplement with some modifications
arxivsupp $file2

file1_bbl=$(echo "$file1" | sed 's/\.tex$/.bbl/')

# Check if the input bbl file exists
if [ ! -f "$file1_bbl" ]; then
    echo "Error: Input bbl file $file1_bbl not found."
    exit 1
fi

file1_arxiv="${file1_noending}_arxiv.tex"

cp "$file1" "$file1_arxiv"
cp "$file1_bbl" "${file1_noending}_arxiv.bbl"

# Redefine the \maketitle command to allow for two titles (in revtex4)
# Define the code to inject
injection_code='\\makeatletter\n\\def\\maketitle{\n\\@author@finish\n\\title@column\\titleblock@produce\n\\suppressfloats[t]}\n\\makeatother\n'

# Use sed to insert the code before \begin{document}
# the escaping is very weird, don't really know what's going on.
sed -i "/begin{document}/i \\$injection_code" "$file1_arxiv"

# modify the copied main to accept the supplement at the end
sed -i "s/bibliography{[^}]*}/input{${file1_noending}_arxiv.bbl}/g" "$file1_arxiv"
injection_code2='\\include{'
injection_code2+=$file2_noending
injection_code2+='_arxiv.tex}\n'
sed -i "/end{document}/i \\$injection_code2" "$file1_arxiv"

replace_footnotes "$file1_arxiv"

# Remove compile files of main and supplement
cleanup_texjunk "$file1"
cleanup_texjunk "$file2"

# Compile the final files
pdflatex -draftmode -interaction=batchmode $file1_arxiv
pdflatex -interaction=batchmode $file1_arxiv
pdflatex $file1_arxiv

# And remove the unneeded compilation files.
rm "./${file1_noending}_arxiv.aux"
rm "./${file1_noending}_arxiv.out"
rm "./${file1_noending}_arxivNotes.bib"

echo "Please check if $file1 $file2 and $file1_arxiv give the desired PDF output."

cd ..

exit 0
